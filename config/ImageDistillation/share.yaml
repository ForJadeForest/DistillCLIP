model:
  #     def __init__(self, student_encoder: nn.Module, teacher_name: str, loss_control_para: Dict, download_root: str,
  #                 teacher_need_layers: Dict, model_type: str = 'text', map_type: str = 'mid', init_type=None,
  #                 warm_steps=10, total_steps=200, weight_decay=1e-3, lr: float = 1e-3):
  #    def __init__(self, input_resolution: int, patch_size: int, width: int, layers: int, heads: int, output_dim: int,
  #                 need_layers: List, drop_out: float = 0.1):
  #  loss_name, loss_scale: dict = None, temperature=None, percent=None, vit_kd_para=None
  #
  #  LOSSNAME = ['out_l1', 'out_ce', 'out_kl', 'out_cos', 'embedding_mse', 'attention_score_mse',
  #            'attention_probs_mse', 'hidden_rep_mse', 'attention_probs_kl', 'last_value_map_kl',
  #            'vit_kd',
  #            'hard_label', 'soft_label']

  #   def __init__(self,
  #                 student_dims,
  #                 teacher_dims,
  #                 alpha_vitkd=0.00003,
  #                 beta_vitkd=0.000003,
  #                 lambda_vitkd=0.5,
  #                 low_layers_num=2,
  #                 high_layers_num=1,
  #                 ):
  #
  class_path: DistillModel
  init_args:
    student_encoder:
      class_path: model.image_encoder.ImageEncoder
      init_args:
        is_student: True
        tea_transformer_width: 768
        vit_paras:
          input_resolution: 224
          patch_size: 32
          width: 768
          layers: 4
          heads: 12
          output_dim: 512
          drop_out: 0.1
          need_layers: null
    loss_control_para:
      loss_name: [ 'out_l1', 'out_ce', 'out_kl', 'out_cos', 'embedding_mse', 'attention_score_mse',
                   'attention_probs_mse', 'hidden_rep_mse', 'attention_probs_kl', 'last_value_map_kl',
                   'vit_kd' ]
      temperature: 1
      vit_kd_para:
        student_dims: 768
        teacher_dims: 768
    teacher_name: ViT-B/32
    download_root: '/data/pyz/.cache'
    teacher_need_layers: [ 0, 1, 10, 11 ]
    model_type: 'image'
    map_type: 'begin'
    init_type: null
    warm_steps: 10
    total_steps: 300
    weight_decay: 1.0e-2
    lr: 5.0e-3




data:
  class_path: DistillationDataModule
  init_args:
    num_workers: 12
    dataset: '_dataset'
    train_batch_size: 1024
    kwargs:
      data_dir: '/data/pyz/data'
      dataset_name: 'ImageDataset'
      cache_dir: '/data/pyz/data/cache'
      train_image_dir: '/home/pyz/combine_dataset/'
      image_use: [ 'imagenet', 'coco' ]
      cache_path: '/data/pyz/.cache/CLIPDistill'
      overwrite: False





trainer:
  auto_select_gpus: True
  accumulate_grad_batches: 1
  accelerator: 'gpu'
  devices: [ 0, 1, 2, 3]
  max_epochs: 300
#  strategy: 'ddp'
  log_every_n_steps: 50
  enable_progress_bar: True
  check_val_every_n_epoch: 1
  precision: 16
  logger:
    class_path: pytorch_lightning.loggers.wandb.WandbLogger
    init_args:
      dir: '/data/pyz/result/Dis_CLIP'
      name : 'Image_test'
      project: 'ImageDistillation'
      log_model: false
      sync_tensorboard: True
      group:

  callbacks:
    - class_path: LearningRateMonitor
    - class_path: EarlyStopping
      init_args:
        monitor: 'val/loss'
        patience: 15

    - class_path: ModelSummary
      init_args:
        max_depth: 2
    - class_path: ModelCheckpoint
      init_args:
        filename: '{epoch}-val_acc{hp_metric/stu_acc_top1:.2f}-loss{val/loss}'
        monitor: 'hp_metric/stu_acc_top1'
        save_last: True
        save_top_k: 4
        mode: 'max'
        auto_insert_metric_name: false
    - class_path: ModelCheckpoint
      init_args:
        filename: '{epoch}-val_acc{hp_metric/stu_acc_top1:.2f}-loss{val/loss}'
        monitor: 'val/loss'
        save_last: True
        save_top_k: 4
        mode: 'max'
        auto_insert_metric_name: false