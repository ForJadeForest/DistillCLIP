#model:
#  class_path: DistillModel
#  init_args:
#    student_encoder:
#      class_path: model._text_encoder.TextEncoder
#      init_args:
#        transformer_width: 256
#        transformer_layers: 4
#        transformer_heads: 8
#        context_length: 77
#        vocab_size: 49408
#        embed_dim: 512
#        tea_transformer_width: 512
#        is_student: True
#    teacher_name: ViT-B/32
#    download_root: '/data/pyz/.cache'
#    loss_weight: [1.0e3, 1, 1, 1]
#    t: 2

model:
  class_path: DistillModel
  init_args:
    student_encoder:
      class_path: model.image_encoder.ImageEncoder
      init_args:
        is_student: True
        tea_transformer_width: 768
        vit_paras:
          input_resolution: 224
          patch_size: 32
          width: 768
          layers: 4
          heads: 12
          output_dim: 512
    loss_control_para:
      loss_name: [ 'l1', 'kl', 'cos', 'attn', 'hidden', 'emb', 'attn_probs', 'last_value_map', 'last_attn']
      temperature: 2
      loss_scale:
        l1: 10
        emb: 2.5
        attn: 1.5
        hidden: 20
        cos: 10
        kl: 50
    model_type: 'image'
    teacher_name: ViT-B/32
    download_root: '/data/pyz/.cache'
    init_type: 'begin'

data:
  class_path: DistillationDataModule
  init_args:
    num_workers: 16
    dataset: '_dataset'
    batch_size: 128
    kwargs:
      data_dir: '/data/pyz/data'
      dataset_name: 'ImageDataset'
      cache_dir: '/data/pyz/data/cache'
      train_dir: '/home/pyz/combine_dataset/combine_dataset'




trainer:
#  auto_select_gpus: True # If enabled and gpus or devices is an integer, pick available gpus automatically.
  accumulate_grad_batches: 1
  accelerator: 'gpu'
  max_epochs: 50
  min_epochs: 3
  max_steps: -1 # Stop training after this number of steps. Disabled by default (-1). If max_steps = -1 and max_epochs = None, will default to max_epochs = 1000. To enable infinite training, set max_epochs to -1.
  devices: [2]
  precision: 16
#  log
  log_every_n_steps: 100 # How often to log within steps. Default: 50
  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: '/data/pyz/res'
      name: 'Test'
      version: null
  enable_progress_bar: True # show the progressbar
  check_val_every_n_epoch: 1 # valid after n epoch. If None, validation will be done solely based on the number of training batches, requiring val_check_interval to be an integer value.
  val_check_interval: 0.5 # check valid with n batch or n * total_batch_num when check_val_every_n_epoch is None
#  callbacks:
  callbacks:
    - class_path: LearningRateMonitor
#    - class_path: EarlyStopping
#      init_args:
#        monitor: 'val/loss'
    - class_path: ModelSummary
      init_args:
        max_depth: 2
    - class_path: ModelCheckpoint
      init_args:
        filename: '{epoch}-val_acc{hp_metric/stu_acc_top1:.2f}-loss{val/loss}'
        monitor: 'hp_metric/stu_acc_top1'
        save_last: True
        save_top_k: 2
        mode: 'max'
        auto_insert_metric_name: false
  auto_lr_find: True
#  auto_scale_batch_size: 'binsearch'
#  amp_backend: 'apex'  # or native
#  resume_from_checkpoint: '/load/my/checkpoint'
#  strategy: 'ddp'
#  Debug
  limit_train_batches: 0.01
  limit_val_batches: 0.25 # or int 3 means 3 batches
#  limit_test_batches:
#  fast_dev_run: True
#  limit_predict_batches
#  overfit_batches: 1 # Overfit a fracion of training/validation data (float) or a set number of batches (int). Default: 0.0.t



optimizer:
  class_path: Adam
  init_args:
    lr: 0.00012022644346174131
    weight_decay: 0.0001
    amsgrad: True

lr_scheduler:
  class_path: transformers.optimization.get_cosine_schedule_with_warmup
  init_args:
    num_warmup_steps: 20
    num_training_steps: 180